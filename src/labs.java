
import databaseConnection.DatabaseUtil;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author shahd
 */
public class labs extends javax.swing.JFrame {

    /**
     * Creates new form labs
     */
    public labs() throws SQLException {
        initComponents();
        fetchLabsData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        labsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "labID", "labName", "rooms number", "Equipments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        labsTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                labsTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(labsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void labsTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_labsTableKeyPressed
      // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {  // Check if Enter key is pressed
        int selectedRow = labsTable.getSelectedRow();
        if (selectedRow >= 0) {
            // Get the labId from the selected row (assuming labId is in the first column, index 0)
            int labId = (int) labsTable.getValueAt(selectedRow, 0);

            // Open the labTests screen and pass the selected labId
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new labTests(labId).setVisible(true);
                }
            });
        } else {
            JOptionPane.showMessageDialog(null, "Please select a lab first.");
        }
    }
    }//GEN-LAST:event_labsTableKeyPressed

    /**
     * @param args the command line arguments
     */
  public void fetchLabsData() throws SQLException {
    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    try {
        // Use DatabaseUtil to get the connection
        conn = DatabaseUtil.getConnection();

        // SQL query to retrieve lab data
        String fetchLabData = "SELECT l.LAB_ID AS labId, " +
                               "l.NAME AS labName, " +
                               "l.ROOM_COUNT AS roomsNumber, " +
                               "l.EQUIPMENT AS equipments " +
                               "FROM labs l";

        // Creating a DefaultTableModel to hold the table data
        DefaultTableModel model = (DefaultTableModel) labsTable.getModel();
        model.setRowCount(0); // Clear existing rows if any

        pstmt = conn.prepareStatement(fetchLabData);
        rs = pstmt.executeQuery();

        // Fetching data from ResultSet and adding to JTable
        while (rs.next()) {
            int labId = rs.getInt("labId");
            String labName = rs.getString("labName");
            int roomsNumber = rs.getInt("roomsNumber");
            String equipments = rs.getString("equipments");

            // Adding row to table model
            model.addRow(new Object[]{labId, labName, roomsNumber, equipments});
        }

    } catch (SQLException ex) {
        ex.printStackTrace();
    } finally {
        // Close resources
        DatabaseUtil.close(conn, pstmt, rs);
    }
}

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(labs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(labs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(labs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(labs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new labs().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(labs.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable labsTable;
    // End of variables declaration//GEN-END:variables
}
